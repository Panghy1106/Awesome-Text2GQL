MATCH (n {name: 'Carrie-Anne Moss'}) RETURN n
获得名字是Carrie-Anne Moss的节点的信息。
MATCH (n {born: 1967}),(nm {name: "Meg Ryan"}) RETURN n
从数据库中查找出生于1967年或名字是Meg Ryan的人。
MATCH (person {name: 'Laurence Fishburne'})-[]-(movie) RETURN movie.title
从数据库中查找与Laurence Fishburne有关的电影。
MATCH (:person {name: 'Laurence Fishburne'})-[]-(movie:movie) RETURN movie.title
在图中查找Laurence Fishburne出演或参与的电影（仅限电影节点）。
MATCH (:person {name: 'Laurence Fishburne'})-[r]->(movie) RETURN type(r)
查询Laurence Fishburne与电影之间的关系类型。
MATCH (matrix:movie {title: 'The Matrix'})<-[:acted_in]-(actor) RETURN actor.name
查找数据库中出演《黑客帝国》的演员。
MATCH (laurence {name: 'Laurence Fishburne'})-[:acted_in]->(movie)<-[:directed]-(director) RETURN movie.title, director.name
查找数据库中查询Laurence Fishburne出演的电影。这些电影的导演都是谁？
MATCH (laurence {name: 'Laurence Fishburne'})-[:acted_in]->(movie)<-[:directed]-(director) RETURN movie.title, director.name
找到查找数据库中查询Laurence Fishburne出演的电影。这些电影的导演都。
MATCH (n) WHERE n:person RETURN n.name, n.born
查询所有人的名字和出生年份。
MATCH (n)-[k:acted_in]->(f) WHERE k.role = "Trinity" RETURN f.title
获得有Trinity这个角色的电影。
MATCH (n)-[r]->() WHERE n.name='Laurence Fishburne' AND type(r) STARTS WITH 'ac' RETURN type(r), r.role
从数据库中查找Laurence Fishburne与其他节点的关系类型以'ac'开头的。他在这些关系中扮演了什么角色
MATCH ()-[r]->() WHERE euid(r) = "0_3937_0_0_0" RETURN r
从数据库中查找唯一标识为"0_3937_0_0_0"的关系。
MATCH (n) WHERE id(n)= 0 RETURN n
从数据库中查找ID为0的节点。
MATCH ()-[r]->() WHERE euid(r) = "0_3937_0_0_0" RETURN r
找到唯一标识为"0_3937_0_0_0"的关系。
MATCH (n) WHERE id(n) IN [0, 3, 5] RETURN n
找到ID为0、3或5的节点。
MATCH (n) WHERE n.belt = 'white' RETURN n.name, n.age, n.belt
查找数据库中带白色腰带的人。他们的名字、年龄和腰带颜色分别是什么？
MATCH (n) WHERE n.belt = 'white' RETURN n.name, n.age, n.belt
查询查找数据库中带白色腰带的人。他们的名字、年龄和腰带颜色分别。
MATCH (person) WHERE person.name = 'Peter' AND person.belt IS NULL RETURN person.name, person.age, person.belt
在图中查找名字是Peter但没有腰带的人。他们的年龄是多少？
MATCH (a) WHERE a.name > 'Andres' AND a.name < 'Tobias' RETURN a.name, a.born
查找图数据库中名字在Andres和Tobias之间的人。他们的出生年份是多少？
MATCH (n:person) RETURN n.name ORDER BY n.name SKIP 3
查询跳过前3个人，返回后面的人的名字。
MATCH (n:person) RETURN n.name LIMIT 3
在图中查找前3个人的名字。
MATCH (a) RETURN id(a)
获得返回所有节点的ID。
MATCH (n)-[r]->() WHERE n.name = 'Laurence Fishburne' RETURN type(r)
查找图数据库中Laurence Fishburne与其他具有出边关系的节点的关系类型。
MATCH (n {name: 'Laurence Fishburne'})-[]->(x) RETURN labels(n), n.born, count(*)
查找数据库中Laurence Fishburne的标签。他出生年份是多少？他与其他节点的关系总数是多少？
MATCH (a) RETURN keys(a) LIMIT 1
查找图数据库中返回第一个节点的键。
MATCH (a) RETURN labels(a) LIMIT 1
找到返回第一个节点的标签。
WITH ['John', 'Mark', 'Jonathan', 'Bill'] AS somenames UNWIND somenames AS names WITH names AS candidate WHERE candidate STARTS WITH 'Jo' RETURN candidate
从数据库中查找['John', 'Mark', 'Jonathan', 'Bill']名字列表中，名字以"Jo"开头的人。
WITH [2, 4, 7, 9, 12] AS numberlist UNWIND numberlist AS number WITH number WHERE number = 4 OR (number > 6 AND number < 10) RETURN number
在图中查找在由[2, 4, 7, 9, 12]组成的数字列表中，数字等于4或大于6且小于10的数字。
WITH [2, 3, 4, 5] AS numberlist UNWIND numberlist AS number WITH number WHERE number IN [2, 3, 8] RETURN number
找到列表 [2, 3, 4, 5]中包含2、3或8的数字。
RETURN [1,2,3,4,5]+[6,7] AS myList
查找图数据库中两个列表相加的结果。